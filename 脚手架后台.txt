q: 初始化体系 为什么需要后台提供的标准api
a: 初始化体系中创建项目，希望实现通用能力，需要接入外部项目，这是一个动态过程

q: 发布体系为什么需要websocket服务
a: 存在云构建，云发布。虽然可以调用api让后台执行任务，但是前台无法知道。websocket可以做实时通知。

发布体系依赖于websocket服务

--初始化过程支持 项目/组件 标准和自定义模式，标准模式按照创建项目过程中按照标准流程一步一步向下，自定义模式根据自己选择，
比如可以选择初始化某些字段，具有更高的自由度。

q:open api中静态资源查询能力？
a: 静态资源指的是组件当中会做一些查询，可能会查询到组件最终的一个构建结果，这个结果放在静态资源库

q: open api中的配置信息？
a: 可以实现某一个细节点做成动态的，这个信息应该存储在配置文件，通过api调取配置文件

git初始化仓库

--发布体系中依赖的资源体系和远程缓存体系
资源体系：发布体系中依赖的资源体系，最终发布是会发布到资源体系。静态资源文件上传到oss，oss是不能加速的,所以oss同步到cdn实现加速
远程缓存体系： 做云构建过程中重要内容的缓存，比如公司内部脚手架被同时调用构建能力，是并行操作，会创建多条任务 。redis是缓存服务器
                          可以缓存多条任务
云构建过程中，需要把代码下载到本地进行一系列操作，云构建过程中代码是没有地方存放的，服务端缓存存放代码构建产物

--脚手架核心框架的本地缓存体系
脚手架初始化过程中，会用到某些配置信息在本地的缓存。有两种缓存方案，本地文件&环境变量

--初始化体系中的模板库
模板库存储在npm中，因为npm天然适合做版本管理的特点，适合做模板库的存储。

inquirer

--组件初始化体系中的标准和自定义模式指什么？

--为什么要check root启动
通过root启动生成的文件其它账户是无法操作的，需要进行root降级

--脚手架核心框架中为什么需要本地缓存体系
脚手架初始化过程中会用到某些配置信息在本地的缓存，会涉及到本地文件缓存。两种方案，缓存在本地文件中或者环境变量








